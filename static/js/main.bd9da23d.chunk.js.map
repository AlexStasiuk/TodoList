{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/todo-list-item/todo-list-item.js","components/todo-list-item/index.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/item-status-filter.js","components/item-status-filter/index.js","components/item-add-form/item-add-form.js","components/item-add-form/index.js","components/app/app.js","components/app/index.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onTermChange","e","props","onSearchChange","setState","target","value","onSubmit","this","type","label","onChange","placeholder","React","Component","TodoListItem","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","filterButtons","name","ItemStatusFilter","buttons","filter","onFilterChange","ItemAddForm","onLabelChange","preventDefault","addNewItem","App","maxId","todoData","createNewItem","deleteItem","idx","findIndex","el","console","log","before","slice","after","toggleProperty","text","forEach","elem","newItem","arr","propName","res","array","length","toLowerCase","indexOf","filteredItems","filterItems","visibleItems","search","doneItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd9da23d.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends React.Component {\r\n  \r\n  state={\r\n    term:\"\"\r\n  }\r\n  onTermChange = (e) => {\r\n    const {onSearchChange = () => {}} = this.props;\r\n    this.setState({\r\n      term: e.target.value\r\n    });\r\n\r\n    onSearchChange(e.target.value);\r\n  };\r\n  render (){\r\n    return(\r\n     <form\r\n\r\n     className=\"bottom-panel d-flex\"\r\n     onSubmit={this.onSubmit}> \r\n\r\n      <input type=\"text\"\r\n                  className=\"form-control new-todo-label\"\r\n                  value={this.state.label}\r\n                  onChange={this.onTermChange}\r\n                  placeholder=\"type to search\"\r\n      />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends React.Component{\r\n\r\n  render(){\r\n    const { label, onDeleted, onToggleImportant, onToggleDone, done, important } = this.props;\r\n    let classNames = \"todo-list-item\";\r\n    if(done){\r\n      classNames+=\" done\";\r\n    }\r\n    if(important){\r\n      classNames+=\" important\";\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n  \r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-success btn-sm float-right\"\r\n                onClick={onToggleImportant}>\r\n          <i className=\"fa fa-exclamation\"/>\r\n        </button>\r\n  \r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\"\r\n                onClick={onDeleted}>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  };\r\n}","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          {...itemProps }\r\n          onDeleted={() => onDeleted(id)} \r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}/>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      { elements }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nconst filterButtons = [\r\n  { name: 'all', label: 'All' },\r\n  { name: 'active', label: 'Active' },\r\n  { name: 'done', label: 'Done' }\r\n];\r\n\r\nexport default class ItemStatusFilter extends React.Component{\r\n\r\n  render(){\r\n    const buttons = filterButtons.map(({name, label}) => {\r\n      const isActive = name === this.props.filter;\r\n      const classNames = 'btn ' + (isActive ? 'btn-info' : 'btn-outline-secondary');\r\n  \r\n      return (\r\n        <button key={name}\r\n                type=\"button\"\r\n                onClick={() => this.props.onFilterChange(name)}\r\n                className={classNames}>{label}</button>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"btn-group\">\r\n          {buttons}\r\n      </div>\r\n    )\r\n  }\r\n}","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends React.Component{\r\n  \r\n  state = {\r\n    label: ''\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    })\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { label } = this.state;\r\n    this.setState({ label: '' });\r\n    const cb = this.props.addNewItem || (() => {});\r\n    cb(label);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"bottom-panel d-flex\"\r\n        onSubmit={this.onSubmit}>\r\n\r\n        <input type=\"text\"\r\n               className=\"form-control new-todo-label\"\r\n               value={this.state.label}\r\n               onChange={this.onLabelChange}\r\n               placeholder=\"What needs to be done?\" />\r\n\r\n        <button type=\"submit\"\r\n                className=\"btn btn-outline-secondary\">Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\nimport './app.css';\r\n\r\nexport default class App extends React.Component{\r\n\r\n  maxId = 1;\r\n  state = {\r\n    todoData : [\r\n      this.createNewItem(\"Drink coffee\"),\r\n      this.createNewItem(\"Make Awesome App\"),\r\n      this.createNewItem(\"Have a lunc\")\r\n    ],\r\n    term: \"\",\r\n    filter: \"all\"\r\n  }\r\n  createNewItem (label){\r\n    return{\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    }\r\n  }\r\n  getMaxId(){\r\n    let maxId = 0;\r\n    const {todoData} = this.state;\r\n    todoData.forEach((elem) => {\r\n      if(elem.id > maxId){\r\n        maxId = elem.id;\r\n      }\r\n    });\r\n    console.log(maxId);\r\n    return maxId;\r\n  }\r\n\r\n  deleteItem = (id) =>{\r\n    this.setState((state) =>{\r\n      const idx = state.todoData.findIndex((el) => el.id === id);\r\n      console.log(idx);\r\n      \r\n      const before = state.todoData.slice(0,idx);\r\n      const after = state.todoData.slice(idx + 1);\r\n      return{\r\n        todoData: [...before, ...after]\r\n      }\r\n    });\r\n  }\r\n  toggleProperty(arr, id, propName){\r\n    const idx = arr.findIndex((item) => item.id === id);\r\n    const oldItem = arr[idx];\r\n    const value = !oldItem[propName];\r\n\r\n    const item = { ...arr[idx], [propName]: value } ;\r\n    console.log(item,\"deleted\");\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      item,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n  onToggleImportant = (id) => {\r\n    this.setState((state) => {\r\n      const todoData = this.toggleProperty(state.todoData, id, 'important');\r\n      return { todoData };\r\n    });\r\n  }\r\n  onToggleDone = (id) => {\r\n    this.setState((state) => {\r\n      const todoData = this.toggleProperty(state.todoData, id, 'done');\r\n      return { todoData };\r\n    });\r\n  }\r\n  doneItems(){\r\n    let res = 0;\r\n    const {todoData} = this.state;\r\n    todoData.forEach((elem)=>{\r\n      if(elem.done){\r\n        res++;\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  addNewItem = (text) => {\r\n    this.setState((state) =>{\r\n      let maxId = 0;\r\n      \r\n      this.state.todoData.forEach((elem) => {\r\n        if(elem.id > maxId){\r\n          maxId = elem.id;\r\n        }\r\n      });\r\n      const newId = maxId + 1;\r\n      \r\n      const newItem = {id: newId, label: text, important: false, done: false};\r\n      const todoData = [...state.todoData, newItem];\r\n      return{\r\n        todoData\r\n      };\r\n    });\r\n  }\r\n  onSearchChange = (term) =>{\r\n    this.setState({term});\r\n  }\r\n  search(array, term){\r\n    if(term.length === 0){\r\n      return array;\r\n    }\r\n    return array.filter((item) =>{\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    })\r\n  }\r\n  onFilterChange = (filter) =>{\r\n    this.setState({filter});\r\n  }\r\n  filterItems(array, filter){\r\n    if(filter === \"all\"){\r\n      return array;\r\n    }\r\n    else if(filter === \"done\"){\r\n      return array.filter((item) => {\r\n        return item.done;\r\n      })\r\n    }\r\n    else if(filter === \"active\"){\r\n      return array.filter((item) => {\r\n        return !item.done;\r\n      })\r\n    }\r\n    else{\r\n      return array;\r\n    }\r\n  }\r\n  render(){\r\n\r\n    const {todoData, term, filter} = this.state;\r\n\r\n    const filteredItems = this.filterItems(todoData, filter);\r\n\r\n    const visibleItems = this.search(filteredItems, term);\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={this.state.todoData.length - this.doneItems()} done={this.doneItems()} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel \r\n          onSearchChange={this.onSearchChange}/>\r\n          <ItemStatusFilter\r\n          filter={this.state.filter}\r\n          onFilterChange={this.onFilterChange}/>\r\n        </div>\r\n\r\n        <TodoList \r\n          todos={visibleItems} \r\n          onDeleted = {this.deleteItem}\r\n          onToggleImportant = {this.onToggleImportant}\r\n          onToggleDone = {this.onToggleDone}\r\n          />\r\n        <ItemAddForm \r\n          addNewItem = {this.addNewItem}\r\n          todos={this.state.todoData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import App from './app';\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}